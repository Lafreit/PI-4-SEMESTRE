# Caminho 1: Interface gráfica com sqlite3 + tkinter
# Aqui está um exemplo básico de uma interface para cadastrar usuários e listar caronas disponíveis:

import sqlite3
import tkinter as tk
from tkinter import messagebox

# Conexão com o banco
conn = sqlite3.connect("caronas.db")
cursor = conn.cursor()

# Criação das tabelas (executar uma vez)
cursor.execute("""
CREATE TABLE IF NOT EXISTS usuarios (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    email TEXT UNIQUE NOT NULL,
    senha TEXT NOT NULL,
    tipo_usuario TEXT CHECK(tipo_usuario IN ('motorista', 'passageiro')) NOT NULL
)
""")

cursor.execute("""
CREATE TABLE IF NOT EXISTS caronas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    motorista_id INTEGER NOT NULL,
    origem TEXT NOT NULL,
    destino TEXT NOT NULL,
    horario_saida TEXT NOT NULL,
    vagas_disponiveis INTEGER,
    FOREIGN KEY (motorista_id) REFERENCES usuarios(id)
)
""")

conn.commit()

# Função para cadastrar usuário
def cadastrar_usuario():
    nome = entry_nome.get()
    email = entry_email.get()
    senha = entry_senha.get()
    tipo = var_tipo.get()
    try:
        cursor.execute("INSERT INTO usuarios (nome, email, senha, tipo_usuario) VALUES (?, ?, ?, ?)",
                       (nome, email, senha, tipo))
        conn.commit()
        messagebox.showinfo("Sucesso", "Usuário cadastrado!")
    except sqlite3.IntegrityError:
        messagebox.showerror("Erro", "Email já cadastrado.")

# Função para listar caronas
def listar_caronas():
    cursor.execute("""
    SELECT c.origem, c.destino, c.horario_saida, u.nome
    FROM caronas c
    JOIN usuarios u ON c.motorista_id = u.id
    """)
    resultados = cursor.fetchall()
    lista.delete(0, tk.END)
    for origem, destino, horario, motorista in resultados:
        lista.insert(tk.END, f"{motorista}: {origem} → {destino} às {horario}")

# Interface
root = tk.Tk()
root.title("App de Caronas")

tk.Label(root, text="Nome").pack()
entry_nome = tk.Entry(root)
entry_nome.pack()

tk.Label(root, text="Email").pack()
entry_email = tk.Entry(root)
entry_email.pack()

tk.Label(root, text="Senha").pack()
entry_senha = tk.Entry(root, show="*")
entry_senha.pack()

var_tipo = tk.StringVar(value="passageiro")
tk.Radiobutton(root, text="Motorista", variable=var_tipo, value="motorista").pack()
tk.Radiobutton(root, text="Passageiro", variable=var_tipo, value="passageiro").pack()

tk.Button(root, text="Cadastrar Usuário", command=cadastrar_usuario).pack(pady=5)
tk.Button(root, text="Listar Caronas", command=listar_caronas).pack(pady=5)

lista = tk.Listbox(root, width=50)
lista.pack(pady=10)

root.mainloop()